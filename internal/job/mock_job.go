// Code generated by MockGen. DO NOT EDIT.
// Source: job.go
//
// Generated by this command:
//
//	mockgen -source=job.go -package=job -destination=mock_job.go JobAPI
//
// Package job is a generated GoMock package.
package job

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/batch/v1"
	v10 "sigs.k8s.io/node-feature-discovery-operator/api/v1"
)

// MockJobAPI is a mock of JobAPI interface.
type MockJobAPI struct {
	ctrl     *gomock.Controller
	recorder *MockJobAPIMockRecorder
}

// MockJobAPIMockRecorder is the mock recorder for MockJobAPI.
type MockJobAPIMockRecorder struct {
	mock *MockJobAPI
}

// NewMockJobAPI creates a new mock instance.
func NewMockJobAPI(ctrl *gomock.Controller) *MockJobAPI {
	mock := &MockJobAPI{ctrl: ctrl}
	mock.recorder = &MockJobAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJobAPI) EXPECT() *MockJobAPIMockRecorder {
	return m.recorder
}

// CreatePruneJob mocks base method.
func (m *MockJobAPI) CreatePruneJob(ctx context.Context, nfdInstance *v10.NodeFeatureDiscovery) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePruneJob", ctx, nfdInstance)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePruneJob indicates an expected call of CreatePruneJob.
func (mr *MockJobAPIMockRecorder) CreatePruneJob(ctx, nfdInstance any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePruneJob", reflect.TypeOf((*MockJobAPI)(nil).CreatePruneJob), ctx, nfdInstance)
}

// DeleteJob mocks base method.
func (m *MockJobAPI) DeleteJob(ctx context.Context, j *v1.Job) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteJob", ctx, j)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteJob indicates an expected call of DeleteJob.
func (mr *MockJobAPIMockRecorder) DeleteJob(ctx, j any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteJob", reflect.TypeOf((*MockJobAPI)(nil).DeleteJob), ctx, j)
}

// GetJob mocks base method.
func (m *MockJobAPI) GetJob(ctx context.Context, namespace, name string) (*v1.Job, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJob", ctx, namespace, name)
	ret0, _ := ret[0].(*v1.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJob indicates an expected call of GetJob.
func (mr *MockJobAPIMockRecorder) GetJob(ctx, namespace, name any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJob", reflect.TypeOf((*MockJobAPI)(nil).GetJob), ctx, namespace, name)
}
